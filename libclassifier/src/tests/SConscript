# import platform

# Compile unit tests

# src_path='#src'
# src_files=[
# 	'tests.cpp',
# 	'../TrainingData.cpp',
# 	'../TestData.cpp',
# 	'../TemporaryReader.cpp',
# 	'../AbstractReader.cpp',
# 	'../NaiveClassifier.cpp',
# 	'../TemporaryFactory.cpp',
# 	'../DataFactory.cpp'
# ]

# libs=[
# 	'boost_python',
# 	'boost_unit_test_framework',
# 	'boost_serialization',
# 	'boost_system'
# ]

# env = Environment(TARGET_ARCH = 'x86')
# env.Append(CPPPATH=src_path)

# if platform.system() == "Windows":
# 	env.Append(LIBPATH=['C:\\Users\\tolkjen\\Documents\\boost_1_53_0\\lib\\shared_all', 
# 		'C:\\Users\\tolkjen\\Documents\\boost_1_53_0\\stage\\lib', 
# 		'C:\\Python27\\libs'])
# 	env.Append(CPPPATH=['C:\\Users\\tolkjen\\Documents\\boost_1_53_0', 'C:\\Python27\\include'])
# 	env.Append(CCFLAGS=['/MD', '/EHsc'])
# else:
# 	env.ParseConfig('pkg-config --cflags --libs python')
# 	env.Append(LIBS=['boost_python', 'boost_unit_test_framework', 'boost_serialization'])
# 	env.Append(CCFLAGS=['-std=c++11'])

# env.Program(target='tests', source=src_files)

# # Copy test files

# test_files = [
# 	'test_input_00.txt',
# 	'test_input_01.txt',
# 	'training_input_00.txt',
# 	'training_input_01.txt'
# ]

# for test_file in test_files:
# 	Command('#bin/tests/' + test_file,
# 			'#src/tests/' + test_file,
# 			Copy('$TARGET', '$SOURCE'))

import platform

Import('*')

tests = env.Program('tests', ['tests.cpp', static_lib])

# Create a list of files to be copied to build dir
copied_obj = []
filenames = Glob('*.txt')
if platform.system() == "Windows":
	filenames.append('boost_unit_test_framework-vc110-mt-1_53.dll')

# Mark files in the list as dependencies for tests
for filename in filenames:
	obj = Command(filename, File(filename).srcnode(), Copy("$TARGET", "$SOURCE"))
	copied_obj.append(obj)
Depends(tests, copied_obj)

Return('tests')
